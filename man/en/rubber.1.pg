\dnl (This file is covered by the GPL as part of Rubber.)
\init(manpage, en)
\title(rubber)
\man_descr(a building system for LaTeX documents)
\man_section(1)
\part(menu)
\begin(toc)
  \link(Rubber homepage, rubber.html) \br
  \link(send me a mail, mailto:emmanuel@beffara.org)
\end(toc)
contents:
\part(front)

\begin(subtitle)
\section(1, [Rubber])
documentation for version \version
\end(subtitle)

\begin(intro)
  This is the man page for Rubber. One day, I will have to make a real
  documentation, for instance to explain how to make modules to support
  packages.
\end(intro)

\part(main)

\section(2, Synopsis)

\syntax(rubber, [\optarg(options) \arg(sources)...])

\section(2, Description)

Rubber is a wrapper for LaTeX and companion programs. Its purpose is, given a
LaTeX source to process, to compile it enough times to resolve all references,
possibly running satellite programs such as BibTeX or makeindex to produce
appropriate data files.\br

The default action is to build the specified documents completely. The source
files may be either LaTeX sources (in which case the suffix \tt(.tex) may be
omitted) or documents in a format Rubber knows how to translate to LaTeX (this
currently means a CWEB document).\br

If one compilation fails, the whole process stops, including the compilation
of the next documents on the command line, and \cmd(rubber) returns a non-zero
exit code.

\section(2, Options)

The options are used either to choose the action to be performed or to
configure the building process. Options are parsed using GNU Getopt
conventions.

\begin(description)

\item([\ddash[]clean], [Remove all files produced by the compilation, instead
of building the document. This applies to the compilation as it would be done
with the other options of the command line, i.e. saying
\begin(example)
rubber --clean foo
\end(example)
will not delete \tt(foo.ps), while saying
\begin(example)
rubber --ps --clean foo
\end(example)
will.])

\item([\dash[]f, \ddash[]force], [Force at least one compilation of the
source. This may be useful, for instance, if some unusual dependency was
modified (e.g. a package in a system directory).])

\item([\dash[]h, \ddash[]help], [Display the list of all available options
and exit nicely.])

\item([\dash[]m, \ddash[]module \narg(module)\optarg([:\narg(args)])],
[Use the specified module in addition to the document's packages. Arguments
can be passed to the package by adding them after a colon, they correspond to
the package options in LaTeX.])

\item([\dash[]d, \ddash[]pdf], [Use pdfLaTeX instead of LaTeX in order to
produce PDF output instead of DVI. This option is a synonym for
\ddopt(module pdftex).])

\item([\dash[]p, \ddash[]ps], [Process the DVI produced by the process
through \cmd(dvips) to produce a PostScript document. This option is a synonym
for \ddopt(module dvips), it is naturally incompatible with \ddopt(pdf).])

\item([\dash[]q, \ddash[]quiet], [Suppress all messages during the process.])

\item([\dash[]o, \ddash[]readopts \narg(file)], [Read additional options form
the specified file.])

\item([\dash[]s, \ddash[]short], [Display LaTeX's error messages in a compact
form (one error per line).])

\item([\dash[]v, \ddash[]verbose], [Increase the verbosity level. The default
level is 0, levels up to 3 exist. Beware, saying \dopt(vvv) makes Rubber speak
a lot.])

\item([\ddash[]version], [Print the version number and exit nicely.])

\end(description)

\section(2, Modules)

For every package that a document uses, Rubber looks for a module of the same
name to perform the tasks that this package my require apart from the
compilation by LaTeX. Modules can be added to the ones provided by default to
include new features (this is the point of the module system). The standard
modules are the following:

\begin(description)

\item(bibtex, [Takes care of processing the document's bibliography with
BibTeX when needed. This module is automatically loaded if the document
contains the macro \macro(bibliography).])

\item(cweb, [This module's purpose is to run \cmd(cweave) if needed before the
compiling process to produce the LaTeX source. This module is automatically
loaded if the file specified on the command line has \tt(.w) as its suffix.])

\item(dvips, [Runs \cmd(dvips) at the end of compilation to produce a
PostScript document. This module is also loaded by the command line option
\ddopt(ps).])

\item([graphics, graphicx], [These modules identify the graphics included in
the document and consider them as dependencies for compilation. They also use
standard rules to build these files with external programs. Current rules
include conversion from EPS to PDF using \cmd(epstopdf)(1), conversion of XFig
figures to EPS, PDF or PNG using \cmd(fig2dev)(1), compilation of Metapost
sources (using \cmd(mpost)(1)), and bounding box extraction from gzipped EPS
figures.])

\item(makeidx, [Process the document's index with \cmd(makeindex) when
needed.])

\item([minitoc, minitoc-hyper], [On cleaning, remove additional files that
produced to make partial tables of contents.])

\item(pdftex, [Instructs Rubber to use \cmd(pdflatex) instead of \cmd(latex)
to compile the document into a PDF instead of a DVI. This module is also
loaded by the command line option \ddopt(pdf).])

\item(xr, [Add additional .aux files used for external references to the list
of dependencies, so recompiling is automatic when referenced document are
changed.])

\end(description)

\part(man)

\section(2, Bugs)

There are surely a some...\br

This page documents Rubber version \version. The program and this man-page are
maintained by \link(Emmanuel Beffara, emmanuel@beffara.org).
The homepage for Rubber can be found at http://beffara.org/stuff/rubber.html.

\section(2, See also)

\manref(rubber-info, 1),
\manref(latex, 1),
\manref(pdflatex, 1),
\manref(bibtex, 1),
\manref(dvips, 1),
\manref(texexec, 1)

\bye
